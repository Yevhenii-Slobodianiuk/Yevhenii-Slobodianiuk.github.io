{"version":3,"file":"static/js/996.855f4c09.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelServices.js"],"sourcesContent":["import img from \"./004 error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\"}} src={img} alt=\"Error message\" />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import \"./appBanner.scss\"\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n\treturn (\r\n\t\t<div className=\"app__banner\">\r\n\t\t\t<img src={avengers} alt=\"Avengers\" />\r\n\t\t\t<div className=\"app__banner-text\">\r\n\t\t\t\tNew comics every week!<br />\r\n\t\t\t\tStay tuned!\r\n\t\t\t</div>\r\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AppBanner;","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelServices\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n\tconst [offset, setOffset] = useState(0);\r\n\tconst [comicsList, setComicsList] = useState([]);\r\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\r\n\tconst [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n\tconst { getAllComics, loading, error } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true);\r\n\t}, [])\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\t\tgetAllComics(offset)\r\n\t\t\t.then(onComicsListLoaded)\r\n\t}\r\n\r\n\tconst onComicsListLoaded = (newComicsList) => {\r\n\t\tlet ended = false;\r\n\t\tif (newComicsList.length < 8) {\r\n\t\t\tended = true;\r\n\t\t}\r\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n\t\tsetNewItemLoading(false);\r\n\t\tsetOffset(offset => offset + 8);\r\n\t\tsetComicsEnded(ended);\r\n\t}\r\n\r\n\tconst renderComics = (arr) => {\r\n\t\tlet items = arr.map((item, i) => {\r\n\r\n\t\t\tlet imgStyle = { 'objectFit': 'cover' };\r\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n\t\t\t\timgStyle = { 'objectFit': 'unset' };\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<li key={i} className=\"comics__item\">\r\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\r\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} style={imgStyle} className=\"comics__item-img\" />\r\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\r\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price ? `${item.price}$` : \"Not AVALIABLE\"}</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tconst items = renderComics(comicsList);\r\n\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n\treturn (\r\n\t\t<div className=\"comics__list\">\r\n\t\t\t{spinner}\r\n\t\t\t<ul className=\"comics__grid\">\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t{items}\r\n\t\t\t</ul>\r\n\t\t\t<button \r\n\t\t\tonClick={() => onRequest(offset)}\r\n\t\t\tdisabled={newItemLoading}\r\n\t\t\tstyle={{ 'display': comicsEnded ? 'none' : 'block' }}\r\n\t\t\tclassName=\"button button__main button__long\">\r\n\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\"\r\n\r\nconst ComicsPage = () => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [process, setProcess] = useState(\"waiting\");\r\n\r\n\tconst request = useCallback(async (url, method = \"GET\", body = null, headers = {\r\n\t\t\"Content-Type\": \"application/json\"}) => {\r\n\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetProcess(\"loading\")\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status ${response.status}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = await response.json();\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch(e) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\tsetProcess(\"error\");\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetError(null)\r\n\t\tsetProcess(\"loading\")\r\n\t}, []);\r\n\r\n\treturn {loading, request, error, clearError, process, setProcess}\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError, process, setProcess } = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apikey = 'apikey=0b16f2ffd7429e208117962440421f77';\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apikey}`);\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apikey}`);\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComics = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apikey}`);\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apikey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apikey}`);\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description,\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\ttitle: comics.title,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tid: comics.id,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description,\r\n\t\t\tpageCount: comics.pageCount,\r\n\t\t\tlanguage: comics.textObjects.language || \"en-US\"\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tclearError,\r\n\t\tgetAllComics,\r\n\t\tgetComics,\r\n\t\tgetCharacterByName,\r\n\t}\r\n\r\n}\r\n\r\nexport default useMarvelService;"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","offset","setOffset","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","getAllComics","loading","error","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","map","item","i","imgStyle","thumbnail","Link","to","concat","id","title","price","errorMessage","spinner","Spinner","onClick","disabled","ComicsPage","_Fragment","request","clearError","process","setProcess","useHttp","setLoading","setError","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apikey","_transformCharacter","char","name","description","path","extension","homepage","urls","wiki","comics","_transformComics","prices","pageCount","language","textObjects","getAllCharacters","results","getCharacter","res","getComics","getCharacterByName"],"sourceRoot":""}